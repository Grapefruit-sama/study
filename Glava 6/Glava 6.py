# Глава 6 часть 1
# Функции
# Игра "Крестики-нолики"

# Инструкция
# Демонстрирует, как создавать собственные функции
def instruction():
    """Выводит на экран инструкцию для игрока"""
    print('''
    Добро пожаловать на ринг грандиознейших интеллектуальных состязаний всех времен. 
    Твой мозг и мой процессор сойдутся в схватке за доской игры "Крестики-нолики". 
    Чтобы сделать ход. введи число от О до 8. Числа однозначно соответствуют полям 
    доски - так. как показано ниже:
    0 | 1 | 2
    ---------
    3 | 4 | 5
    ---------
    6 | 7 | 8

    Приготовься к бою. жалкий белковый человечишка. Вот-вот начнется решающее сражение.\n 
    ''')


# основная часть
print("Этo инструкция для игры в 'Крестики-нолики':")
instruction()
print("Этo опять та же самая инструкция:")
instruction()
print("Haдeюcь. теперь смысл игры ясен.")
input("\n\nHaжмитe Enter. чтобы выйти.")


# Программа "Принимай-возвращай"
# Демонстрирует параметры и возвращаемые значения
def display(message):
    print(message)


def give_me_five():
    five = 5
    return five


def ask_yes_no(question):
    """Задает вопрос с ответом 'да' или 'нет'. """
    response = None
    while response not in ('y', 'n', ):
        response = input(question).lower()
    return response


# основная часть
display("Вам сообщение\n")
number = give_me_five()
print(f'Вот что возвратила функция give_me_five(): {number}')
answer = ask_yes_no('\nПожалуйста введите "y" или "n": ')
print('Спасибо что ввели ', answer)
input("\n\nHaжмитe Enter. чтобы выйти.")


# Программа "День рождения"
# Демонстрирует именнованные аргументы и значения параметров по умолчанию
# позиционные параметры
def birthday1(name, age):
    print(f'С днем рождения {name}! Вам сегодня исполняется {age}, не так ли?\n')


# параметры со значением по умолчанию
def birthday2(name="Товарищ Иванов", age=1):
    print(f'С днем рождения {name}! Вам сегодня исполняется {age}, не так ли?\n')


birthday1("Товарищ Иванов", 1)
birthday1(1, "Товарищ иванов")
birthday1(name="Товарищ Иванов", age=1)
birthday1(age=1, name="Товарищ Иванов")
birthday2()
birthday2(name="Катя")
birthday2(age=12)
birthday2(name="Катя", age=12)
birthday2("Катя", 12)
input("\n\nHaжмитe Enter. чтобы выйти.")


# Доступ отовсюду
# Демонстрирует работу с глобальными переменными
def read_global():
    print('В области видимости функции read_global() значение value равно ', value)
def shadow_global():
    print('В области видимости функции shadow_global() значение value равно ', value)
def change_global():
    global value
    value = -10
    print('В области видимости функции change_global() значение value равно ', value)

# Основная часть
# value - глобальная переменная. потому что сейчас мы находимся в глобальной области видимости
value = 10
print("B глобальной области видимости значение переменной value сейчас стало равным", value, "\n")
read_global()
print("Вернемся в глобальную область видимости. Здесь va 1 ue по-прежнему равно", value, "\n")
shadow_global()
print("Bepнeмcя в глобальную область видимости. Здесь value по-прежнему равно", value, "\n")
change_global()
print("Bepнeмcя в глобальную область видимости. Значение value изменилось на", value)
input("\n\nHaжмитe Enter. чтобы выйти.")
